import{C as S,a as b}from"./index-DcoFm3g4.js";import{r as l,$ as C,C as d,w as h,q as m,K as f,u as g}from"./group-user-BfSpxGtK.js";const _="http://localhost:3000/",c=l({}),y=l({}),D=l({}),i=l({}),O=u=>u.reduce((t,s)=>{const o=s.district;return t[o]||(t[o]={totalStations:0,stationNames:[]}),t[o].totalStations++,t[o].stationNames.push(s.station_name),t},{}),p=async()=>{try{const t=(await C.get(`${_}stations`)).data,s=t.reduce((a,r)=>{const e=r.district;return a[e]||(a[e]=0),a[e]++,a},{});c.value=s,y.value=O(t);const o=t.reduce((a,r)=>{const e=r.omc;return a[e]||(a[e]=0),a[e]++,a},{});D.value=o;const n=t.reduce((a,r)=>{const e=r.status===1?"Operational":"Not Operational";return a[e]||(a[e]=0),a[e]++,a},{});i.value=n}catch(u){console.error("Error fetching stations:",u)}},N={__name:"CChartBarExample",setup(u){const t=l([]),s=l([]),o=l({labels:[],datasets:[{label:"Number of Filling Stations",backgroundColor:"#16AF47",data:[]}]}),n=l(0),a=()=>{const e=localStorage.getItem("chartLabels"),v=localStorage.getItem("chartData");e&&v&&(t.value=JSON.parse(e),s.value=JSON.parse(v))},r=()=>{localStorage.setItem("chartLabels",JSON.stringify(t.value)),localStorage.setItem("chartData",JSON.stringify(s.value))};return d(async()=>{a(),await p(),c.value&&(t.value=Object.keys(c.value),s.value=Object.values(c.value),r())}),h([t,s],()=>{o.value.labels=t.value,o.value.datasets[0].data=s.value,r(),n.value++}),(e,v)=>(m(),f(g(S),{data:o.value,key:n.value},null,8,["data"]))}},x={__name:"CChartDoughnutExample",setup(u){const t=l([]),s=l([]),o=l({labels:[],datasets:[{backgroundColor:["#16AF47","#DD1B16"],data:[]}]}),n=l(0);return d(async()=>{await p(),i.value&&(t.value=Object.keys(i.value),s.value=Object.values(i.value))}),h([t,s],()=>{o.value.labels=t.value,o.value.datasets[0].data=s.value,n.value++}),(a,r)=>(m(),f(g(b),{data:o.value,key:n.value},null,8,["data"]))}};export{N as _,D as a,x as b,y as c,p as f};
