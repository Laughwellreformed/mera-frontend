function r(o){throw new Error("setRNConfiguration is not supported by the browser")}function e(o,t){throw new Error("requestAuthorization is not supported by the browser")}async function i(o,t,n){if(typeof o!="function")throw new Error("success callback must be a function");if(!navigator||!navigator.geolocation){console.error("Navigator is undefined");return}navigator.geolocation.getCurrentPosition(o,t,n)}function a(o,t,n){if(typeof o!="function")throw new Error("success callback must be a function");if(!navigator||!navigator.geolocation)throw new Error("Navigator is undefined");return navigator.geolocation.watchPosition(o,t,n)}function c(o){if(!navigator||!navigator.geolocation){console.error("Navigator is undefined");return}navigator.geolocation.clearWatch(o)}function s(){throw new Error("stopObserving is not supported by the browser")}const u={getCurrentPosition:function(o,t,n){i(o,t,n)},watchPosition:function(o,t,n){return a(o,t,n)},clearWatch:function(o){c(o)},stopObserving:function(){console.warn("`ReactNativeGeolocation.stopObserving` is deprecated and should not be used. Use `ReactNativeGeolocation.clearWatch` instead."),s()},requestAuthorization:function(o,t){e()},setRNConfiguration:function(o){r()}};export{u as G};
